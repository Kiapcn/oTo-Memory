#!/bin/bash
echo "üöÄ Lancement complet de oTo-Memory v4.0..."

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# V√©rification de l'environnement
if ! command -v ollama &> /dev/null; then
    echo "‚ùå Erreur: Ollama n'est pas install√©. Ex√©cutez d'abord install_mac.sh"
    exit 1
fi

if ! command -v flutter &> /dev/null; then
    echo "‚ùå Erreur: Flutter n'est pas install√©. Ex√©cutez d'abord install_mac.sh"
    exit 1
fi

# Cr√©ation des dossiers n√©cessaires
mkdir -p user_memory logs

# V√©rification de l'existence des dossiers n√©cessaires
if [ ! -d "$DIR/backend" ] || [ ! -d "$DIR/frontend/flutter_app" ]; then
    echo "‚ùå Erreur: Structure du projet incorrecte"
    exit 1
fi

# Log du d√©marrage
echo "$(date '+%Y-%m-%d %H:%M:%S') - D√©marrage de oTo-Memory v4.0" >> logs/startup.log

# V√©rification du dernier sujet
if [ -f "user_memory/last_topic.txt" ]; then
    LAST_TOPIC=$(cat user_memory/last_topic.txt)
    echo "üß† La derni√®re fois, on parlait de : $LAST_TOPIC"
    echo "Veux-tu continuer cette discussion ou d√©marrer autre chose ? (o/n)"
    read -r response
    if [[ "$response" =~ ^[Oo]$ ]]; then
        echo "‚úÖ Continuation de la conversation sur : $LAST_TOPIC"
        # Sauvegarde du contexte pr√©c√©dent
        cp user_memory/last_topic.txt user_memory/last_topic.txt.bak
    else
        echo "üîÑ D√©marrage d'une nouvelle conversation..."
        # Sauvegarde de l'ancien sujet avant de le supprimer
        cp user_memory/last_topic.txt "user_memory/last_topic_$(date '+%Y%m%d').txt"
        rm user_memory/last_topic.txt
    fi
else
    echo "‚ú® Nouvelle session - Aucune conversation pr√©c√©dente"
fi

# Cr√©ation du fichier de session du jour
SESSION_FILE="user_memory/session_$(date '+%Y-%m-%d').jsonl"
touch "$SESSION_FILE"

# V√©rification de l'environnement Python
if [ ! -d "$DIR/backend/venv" ]; then
    echo "‚ùå Erreur: Environnement Python non configur√©. Ex√©cutez d'abord install_mac.sh"
    exit 1
fi

# Lancement du backend FastAPI
echo "üì° Lancement du backend FastAPI..."
osascript <<EOF
tell application "Terminal"
    do script "cd $DIR/backend && source venv/bin/activate && uvicorn main:app --reload --port 8000"
end tell
EOF
sleep 3

# V√©rification que le mod√®le phi est install√©
if ! ollama list | grep -q "phi"; then
    echo "üß† Installation du mod√®le phi..."
    ollama pull phi
fi

# Lancement d'Ollama
echo "ü§ñ Lancement d'Ollama..."
osascript <<EOF
tell application "Terminal"
    do script "cd $DIR && ollama run phi"
end tell
EOF
sleep 3

# Lancement de l'application Flutter
echo "üì± Lancement de l'application Flutter..."
osascript <<EOF
tell application "Terminal"
    do script "cd $DIR/frontend/flutter_app && flutter clean && flutter pub get && flutter run -d macos"
end tell
EOF

echo "‚úÖ Tout est lanc√© dans 3 terminaux."
echo "‚ÑπÔ∏è  Le backend est accessible sur http://localhost:8000"
echo "‚ÑπÔ∏è  L'application Flutter devrait s'ouvrir automatiquement"
echo "üìù Les logs sont disponibles dans logs/startup.log"
echo "üíæ Les sessions sont sauvegard√©es dans user_memory/"
